---
- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: /home/{{ server_user }}/.ssh
    state: directory
    mode: "0700"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
  when: not ansible_check_mode

- name: Generate SSH key pair
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_rsa_{{ ansible_host }}
    state: present
    type: rsa
    size: 2048
  delegate_to: localhost
  run_once: true
  when: not ansible_check_mode
  tags: setup_ssh

- name: Copy public key to authorized_keys on remote server
  ansible.posix.authorized_key:
    user: "{{ server_user }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa_{{ ansible_host }}.pub') }}"
  when: not ansible_check_mode
  tags: setup_ssh

- name: Set file permissions to 600
  ansible.builtin.file:
    path: /home/{{ server_user }}/.ssh/authorized_keys
    mode: "0600"
  when: not ansible_check_mode

- name: Check ownership of home directory
  ansible.builtin.stat:
    path: /home/{{ server_user }}
  register: home_dir_info

- name: Fail if home directory is folder and file permissions aren't correct
  ansible.builtin.fail:
    msg: The home directory '/home/{{ server_user }}' is not owned by '{{ server_user }}'. Please check the ownership.
  when:
    - not ansible_check_mode
    - home_dir_info.stat.pw_name != server_user
    - authorized_keys_info.stat.mode is not defined or authorized_keys_info.stat.mode != "0600"

- name: Enable pub key authentication in SSH
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: ^(.*)PubkeyAuthentication(.*)$
    line: PubkeyAuthentication yes

- name: Configure secure SSH with RSA keys and without password login
  tags: setup_ssh
  block:
    - name: Enable pub key authentication in SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^(.*)PubkeyAuthentication(.*)$
        line: PubkeyAuthentication yes
      become: true

    - name: Set SSH to a random port
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?Port "
        line: Port {{ generated_ssh_port }}
        state: present
      become: true

    - name: Disable root SSH login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PermitRootLogin "
        line: PermitRootLogin no
        state: present
      become: true

    - name: Disable PAM authentification
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^#?UsePAM
        line: UsePAM no
        state: present
      become: true

    - name: Disable SSH password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PasswordAuthentication "
        line: PasswordAuthentication no
        state: present
      become: true

    - name: Ensure new SSH port is open in UFW
      community.general.ufw:
        rule: allow
        port: "{{ generated_ssh_port }}"
        proto: tcp
      when: not ansible_check_mode
      become: true

    - name: Adding RSA key to ~/.ssh/config file for IP address
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.ssh/config"
        create: true
        block: |
          Host {{ ansible_host }}
             HostName {{ ansible_host }}
             User {{ server_user }}
             Port {{ generated_ssh_port }}
             IdentityFile ~/.ssh/id_rsa_{{ ansible_host }}
             IdentitiesOnly yes
        marker: "# {mark} Ansible managed block for {{ ansible_host }}"
        mode: "0600"
      tags: setup_ssh
      connection: local

    - name: Adding RSA key to ~/.ssh/config file for domain name
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.ssh/config"
        create: true
        block: |
          Host {{ domain_name }}
             HostName {{ ansible_host }}
             User {{ server_user }}
             Port {{ generated_ssh_port }}
             IdentityFile ~/.ssh/id_rsa_{{ ansible_host }}
             IdentitiesOnly yes
        marker: "# {mark} Ansible managed block for {{ domain_name }}"
        mode: "0600"
      when: domain_name is defined and domain_name | length > 0
      tags: setup_ssh
      connection: local

    - name: Disable ssh.socket and stop it immediately
      ansible.builtin.systemd:
        name: ssh.socket
        enabled: false
        state: stopped
      become: true

    - name: Remove temporary SSH configuration files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/ssh.service.d/00-socket.conf
        - /etc/systemd/system/ssh.socket.d/addresses.conf
      loop_control:
        label: "{{ item }}"
      become: true

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true
      become: true

    - name: Enable and start ssh.service
      ansible.builtin.systemd:
        name: ssh.service
        enabled: true
        state: restarted
      become: true

    - name: Display current SSH port
      ansible.builtin.debug:
        msg: The current SSH port is set to {{ generated_ssh_port }}

    - name: Ensure SSH is accessible on the new port
      ansible.builtin.wait_for:
        port: "{{ generated_ssh_port }}"
        delay: 5
        timeout: 30

    - name: Confirm successful SSH connection
      ansible.builtin.debug:
        msg: SSH connection on port {{ generated_ssh_port }} is successful.

    - name: Display final connection details
      ansible.builtin.debug:
        msg:
          - Setup completed successfully!
          - "Use the following details to connect to the server:"
          - "  - SSH Key Path: ~/.ssh/id_rsa_{{ ansible_host | default(inventory_hostname) }}"
          - "  - Username: {{ server_user }}"
          - "  - Password: {{ password_content.content | b64decode }}"
          - "  - Server IP: {{ ansible_host }}"
          - "  - SSH Port: {{ generated_ssh_port }}"

  rescue:
    - name: Roll back SSH configuration if connection fails
      block:
        - name: Restore default SSH port (22)
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^Port "
            line: Port 22
            state: present
          become: true

        - name: Re-enable root login over SSH
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^PermitRootLogin "
            line: PermitRootLogin yes
            state: present
          become: true

        - name: Re-enable SSH password authentication
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^PasswordAuthentication "
            line: PasswordAuthentication yes
            state: present
          become: true

        - name: Restart SSH to apply rollback
          ansible.builtin.service:
            name: ssh
            state: restarted
          become: true
